import 'package:notes/core/models/api_response_model.dart';import 'package:http/http.dart' as http;import 'dart:convert';import 'dart:developer' as developer;import '../models/note_model.dart';class NoteService {  final url = Uri.parse('http://10.0.2.2:3000/notes');  Future<ApiResponseModel> getNotesList() async {    final response = await http.get(url);    if (response.statusCode == 200) {      developer.log(response.body, name: 'CONSOLE.LOG SERVICE');      Map<String, dynamic> fieldsMap = {};      fieldsMap['error'] = false;      fieldsMap['message'] = 'No error';      fieldsMap['datas'] = jsonDecode(response.body);      // fieldsMap['datas'] = NoteModel.fromJson(jsonDecode(response.body));      return ApiResponseModel.fromJson(fieldsMap);    } else {      Map<String, dynamic> fieldsMap = {};      fieldsMap['datas'] = [];      fieldsMap['error'] = true;      fieldsMap['message'] = 'Un problème est survenue lors de la récupération des données.';      return ApiResponseModel.fromJson(fieldsMap);    }  }  Future<ApiResponseModel> createNotesList(NoteModel newNote) async {    final response = await http.post(      url,      headers: {'Content-type': 'application/json'},      body: jsonEncode(<String, String>{        'title': newNote.title,        'description': newNote.description,        'createdAt': newNote.createdAt.toString(),        'updatedAt': newNote.updatedAt.toString(),      }),    );    // print(response.statusCode);    developer.log('Status code: ' + jsonEncode(response.statusCode), name: 'CONSOLE.LOG SERVICE');    if (response.statusCode == 201) {      developer.log('Création réussi...', name: 'CONSOLE.LOG SERVICE');      developer.log('///////////////////', name: 'CONSOLE.LOG SERVICE');      Map<String, dynamic> fieldsMap = {};      fieldsMap['error'] = false;      fieldsMap['message'] = 'No error';      fieldsMap['datas'] = jsonDecode(response.body);      developer.log(jsonEncode(fieldsMap), name: 'CONSOLE.LOG SERVICE');      return ApiResponseModel.fromJson(fieldsMap);    } else {      Map<String, dynamic> fieldsMap = {};      fieldsMap['datas'] = [];      fieldsMap['error'] = true;      fieldsMap['message'] = 'Un problème est survenue lors de la création de la note.';      return ApiResponseModel.fromJson(fieldsMap);    }  }}