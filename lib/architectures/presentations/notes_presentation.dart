import 'package:flutter/material.dart';import 'package:get_it/get_it.dart';import 'package:notes/architectures/presentations/delete_notes_presentation.dart';import 'package:notes/architectures/presentations/save_notes_presentation.dart';import 'package:notes/core/models/note_model.dart';import 'package:notes/core/services/notes_service.dart';class NotesPresentation extends StatefulWidget {  NotesPresentation({Key? key}) : super(key: key);  @override  State<NotesPresentation> createState() => _NotesPresentationState();}class _NotesPresentationState extends State<NotesPresentation> {  NoteService get service => GetIt.instance<NoteService>();  List<NoteModel> notes = [];  @override  void initState() {    notes = service.getNotesList();    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(title: const Text('Listes des notes'),),      floatingActionButton: FloatingActionButton(        onPressed: () {          Navigator.of(context).push(MaterialPageRoute(builder: (_) => const SaveNotesPresentation()));        },        child: const Icon(Icons.add)      ),      body: ListView.separated(        itemBuilder: (_, index) {          return Dismissible(            key: ValueKey(notes[index].id),            onDismissed: (direction) {            },            confirmDismiss: (direction) async {              return await showDialog(context: context, builder: (_) => const DeleteNotesPresentation());            },            background: Container(              color: Colors.red,              padding: const EdgeInsets.only(left: 20),              child: const Align(                child: Icon(Icons.delete, color: Colors.white,),                alignment: Alignment.centerLeft,              ),            ),            secondaryBackground: Container(              color: Colors.green,              padding: const EdgeInsets.only(right: 20),              child: const Align(                child: Icon(Icons.archive, color: Colors.white,),                alignment: Alignment.centerRight,              ),            ),            child: ListTile(              title: Text(                '${notes[index].title} ${index + 1}',                style: TextStyle(color: Theme.of(context).primaryColor),              ),              subtitle: Text('${notes[index].updatedAt.day.toString().padLeft(2,'0')}/${notes[index].updatedAt.month.toString().padLeft(2,'0')}/${notes[index].updatedAt.year}'),              onTap: () {                Navigator.of(context).push(MaterialPageRoute(builder: (_) => SaveNotesPresentation(id: notes[index].id)));            },          ));        },        separatorBuilder: (_, __) => const Divider(height: 1, color: Colors.green,),        itemCount: notes.length      ),    );  }}