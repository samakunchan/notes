import 'dart:convert';import 'package:flutter/material.dart';import 'package:get_it/get_it.dart';import 'package:notes/core/models/note_model.dart';import 'package:notes/core/services/notes_service.dart';import 'dart:developer' as developer;class SaveNotesPresentation extends StatefulWidget {  final Map<String, dynamic>? note;  const SaveNotesPresentation({    Key? key,    this.note  }) : super(key: key);  @override  State<SaveNotesPresentation> createState() => _SaveNotesPresentationState();}class _SaveNotesPresentationState extends State<SaveNotesPresentation> {  bool get isEditing => widget.note != null;  TextEditingController titleController = TextEditingController();  TextEditingController descriptionController = TextEditingController();  NoteService get service => GetIt.instance<NoteService>();  @override  void initState() {    if (isEditing) {      titleController.text = widget.note?['title'];      descriptionController.text = widget.note?['description'];    }    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(title: Text(isEditing ? 'Modifier la note n°${widget.note?['id']}' : 'Créer une note' ),),      body: Padding(        padding: const EdgeInsets.all(12.0),        child: Column(          children: <Widget> [            TextField(              controller: titleController,              decoration: const InputDecoration(                hintText: 'Titre'              ),            ),            const SizedBox(height: 8,),            TextField(              controller: descriptionController,              decoration: const InputDecoration(                hintText: 'description'              ),            ),            const SizedBox(height: 8,),            SizedBox(              width: double.infinity,              height: 50,              child: ElevatedButton(                onPressed: () async {                  developer.log('Bonjour', name: 'CONSOLE.LOG SAVE');                  if(isEditing) {                    developer.log('Je suis en Edition', name: 'CONSOLE.LOG SAVE');                    // update                  } else {                    developer.log('Je suis en Création', name: 'CONSOLE.LOG SAVE');                    final newNote = NoteModel(                        title: titleController.text,                        description: descriptionController.text,                        createdAt: DateTime.now(),                        updatedAt: DateTime.now()                    );                    developer.log('Nouvelle note créé', name: 'CONSOLE.LOG SAVE');                    developer.log(jsonEncode(newNote.title), name: 'CONSOLE.LOG SAVE');                    final result = await service.createNotesList(newNote);                    developer.log('Nouvelle note revenu du serveur', name: 'CONSOLE.LOG SAVE');                    developer.log(jsonEncode(result.message), name: 'CONSOLE.LOG SAVE');                    // print('YOOOOOOOOOOOOOOOOOOO');                    print(result);                    // developer.log(jsonEncode(result), name: 'CONSOLE.LOG SAVE');                  }                  Navigator.of(context).pop();                },                child: Text(widget.note == null ? 'Ajouter une note' : 'Effectuer la modification'),                style: ElevatedButton.styleFrom(primary: Theme.of(context).primaryColor)              )            )          ],        ),      ),    );  }}